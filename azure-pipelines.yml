trigger:
  - master
  - feature*
  - m_douglas*
  - issue*

jobs:
  #==============================================================================
  # Windows
  #==============================================================================
  - job: BuildOnWindows


    pool:
      vmImage: "windows-2019"

    steps:
      - script: "set"
        displayName: "Dump Azure environment variables."

      - checkout: self
        displayName: "Checkout git submodules."
        submodules: true

      - task: CmdLine@2
        inputs:
          script: 'choco install azurepowershell -YES'

      - task: UniversalPackages@0
        inputs:
          command: 'download'
          downloadDirectory: '$(System.DefaultWorkingDirectory)\llvmorg-11.1.0-prebuilt-library'
          feedsToUse: 'internal'
          vstsFeed: 'fda65372-3b82-4cc7-9460-941932f2b9e1/cc48bf99-5156-4bd9-bcae-9f312d30c074'
          vstsFeedPackage: '04bd13f9-2b8a-49da-a498-d272add210f2'
          vstsPackageVersion: '0.0.1'
          verbosity: 'Trace'

      - task: CMake@1
        inputs:
          workingDirectory: 'build\windows'
          cmakeArgs: '..\.. -DLLVM_INSTALL_DIR=$(System.DefaultWorkingDirectory)\llvmorg-11.1.0-prebuilt-library'

      - task: CMake@1
        inputs:
          workingDirectory: 'build\windows'
          cmakeArgs: '--build . --config Release'

      - task: PowerShell@2
        inputs:
          filePath: 'script\build-pack-win32.ps1'
          workingDirectory: 'script'

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: 'script\release\windows'
          includeRootFolder: false
          archiveType: '7z'
          archiveFile: 'cppnamelint-windows.7z'
          replaceExistingArchive: true
          verbose: true

      - task: PowerShell@2
        inputs:
          filePath: 'script/run-test-win32.ps1'
          workingDirectory: 'script/release/windows'

      - task: GitHubRelease@1
        inputs:
          gitHubConnection: 'azure-devops-cppnamelint'
          repositoryName: 'dougpuob/cppnamelint'
          action: 'edit'
          target: '$(Build.SourceVersion)'
          tag: 'v0.3*'
          assets: 'cppnamelint-windows.7z'
          assetUploadMode: 'replace'
          isDraft: true
          isPreRelease: true
          changeLogCompareToRelease: 'lastFullRelease'
          changeLogType: 'issueBased'

  #==============================================================================
  # Linux
  #==============================================================================
  - job: BuildOnLinux

    variables:
      - name: CC
        value: gcc
      - name: CXX
        value: g++

    pool:
      vmImage: "ubuntu-18.04"

    steps:
      - script: "gcc --version"
        displayName: "Show gcc version."

      - script: "export"
        displayName: "Dump Azure environment variables."

      - checkout: self
        displayName: "Checkout git submodules."
        submodules: true


      - task: CmdLine@2
        inputs:
          script: |
            sudo apt-get update
            sudo apt-get install -y wget apt-transport-https software-properties-common            
            wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb            
            sudo dpkg -i packages-microsoft-prod.deb
            sudo apt-get update
            sudo add-apt-repository universe
            sudo apt-get install -y powershell

      - task: UniversalPackages@0
        inputs:
          command: 'download'
          downloadDirectory: '$(System.DefaultWorkingDirectory)/llvmorg-11.1.0-prebuilt-library'
          feedsToUse: 'internal'
          vstsFeed: 'fda65372-3b82-4cc7-9460-941932f2b9e1/0e415509-a02b-46c9-9a2e-53aaa5cce17e'
          vstsFeedPackage: '15a1cdaa-9842-4471-805d-6d3fec90be8f'
          vstsPackageVersion: '0.0.1'
          verbosity: 'Trace'
      
      - script: "ls -la"

      - task: CMake@1
        inputs:
          workingDirectory: 'build/linux'
          cmakeArgs: '../.. -DLLVM_INSTALL_DIR=$(System.DefaultWorkingDirectory)/llvmorg-11.1.0-prebuilt-library'

      - task: CMake@1
        inputs:
          workingDirectory: 'build/linux'
          cmakeArgs: '--build . --config Release'

      #- script: "ls -la -R"
      #  displayName: "Dump folder hierarchy"

      # - script: "./build-bin-linux.sh"
      #   displayName: "build-bin-linux.sh"
      #   workingDirectory: "script"

      # - script: make
      #   workingDirectory: "build/linux"

      #- script: "ls -la -R"
      #  displayName: "Dump folder hierarchy"

      - script: "./build-pack-linux.sh"
        displayName: "build-pack-linux.sh"
        workingDirectory: "script"

      #- script: "ls -la -R"
      #  displayName: "Dump folder hierarchy"

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: 'script/release/linux'
          includeRootFolder: false
          archiveType: '7z'
          archiveFile: 'cppnamelint-ubuntu-18.04.7z'
          replaceExistingArchive: true
          verbose: true

      - script: "./run-test-linux.sh"
        displayName: "run-test-linux.sh"
        workingDirectory: "script/release/linux"
      
      - task: GitHubRelease@1
        inputs:
          gitHubConnection: 'azure-devops-cppnamelint'
          repositoryName: 'dougpuob/cppnamelint'
          action: 'edit'
          target: '$(Build.SourceVersion)'
          tag: 'v0.3*'
          assets: 'cppnamelint-ubuntu-18.04.7z'
          assetUploadMode: 'replace'
          isDraft: true
          isPreRelease: true
          changeLogCompareToRelease: 'lastFullRelease'
          changeLogType: 'issueBased'


  # Remove it temparately becuase my MacPro is newer than Azure runner.
  # #==============================================================================
  # # macOS ("macOS-10.15")
  # #==============================================================================
  # - job: BuildOnMacOS

  #   variables:
  #     - name: CC
  #       value: clang
  #     - name: CXX
  #       value: clang++

  #   pool:
  #     vmImage: "macOS-10.15"

  #   steps:
  #     - script: "clang --version"
  #       displayName: "Show gcc version."

  #     - script: "export"
  #       displayName: "Dump Azure environment variables."

  #     - checkout: self
  #       displayName: "Checkout git submodules."
  #       submodules: true

  #     - task: UniversalPackages@0
  #       inputs:
  #         command: 'download'
  #         downloadDirectory: '$(System.DefaultWorkingDirectory)/llvmorg-11.1.0-prebuilt-library'
  #         feedsToUse: 'internal'
  #         vstsFeed: 'fda65372-3b82-4cc7-9460-941932f2b9e1/1a38fd81-aa9c-4d52-994e-4166c8467c06'
  #         vstsFeedPackage: 'ffae4614-057b-4495-8689-e11543edb830'
  #         vstsPackageVersion: '0.0.1'
  #         verbosity: 'Trace'

  #     - task: CMake@1
  #       inputs:
  #         workingDirectory: 'build/macos'
  #         cmakeArgs: '../.. -DLLVM_INSTALL_DIR=$(System.DefaultWorkingDirectory)/llvmorg-11.1.0-prebuilt-library'

  #     - task: CMake@1
  #       inputs:
  #         workingDirectory: 'build/macos'
  #         cmakeArgs: '--build . --config Release'

  #     - task: Bash@3
  #       inputs:
  #         filePath: 'script/build-pack-linux.sh'
  #         workingDirectory: 'script'

  #     - task: ArchiveFiles@2
  #       inputs:
  #         rootFolderOrFile: 'script/release/macos'
  #         includeRootFolder: false
  #         archiveType: 'zip'
  #         archiveFile: 'cppnamelint-macos-10.14.7z'
  #         replaceExistingArchive: true
  #         verbose: true
          
  #     - script: "./run-test-linux.sh"
  #       displayName: "run-test-linux.sh"
  #       workingDirectory: "script/release/macos"

  #     # - task: GitHubRelease@1
  #     #   inputs:
  #     #     gitHubConnection: 'github.com_dougpuob'
  #     #     repositoryName: 'dougpuob/cppnamelint'
  #     #     action: 'edit'
  #     #     target: '$(Build.SourceVersion)'
  #     #     tag: 'v0.3*'
  #     #     assets: 'cppnamelint-macos-10.14.7z'
  #     #     assetUploadMode: 'replace'
  #     #     isDraft: true
  #     #     isPreRelease: true
  #     #     changeLogCompareToRelease: 'lastFullRelease'
  #     #     changeLogType: 'issueBased'
